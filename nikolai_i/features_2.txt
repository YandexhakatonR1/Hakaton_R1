# Поиск дубликатов
def dubl_list(seq):
    seen = set()
    seen_add = seen.add
    return [x for x in seq if not (x in seen or seen_add(x))]
nick = ['tariff_plans_4_1_num',
 'charges_details_12_1_sum',
 'payments_details_35_6_sum',
 'spas_symptoms_agr_7_6_sum',
 'markers_706_1_cnt',
 'payments_details_28_3_sumpct',
 'payments_details_27_1_sumpct',
 'payments_details_29_6_sumpct',
 'balance_details_0_1_num',
 'payments_details_49_6_avg',
 'payments_details_48_3_sum',
 'markers_346_1_cnt',
 'spas_symptoms_agr_18_6_std',
 'arpu_2_6_avg',
 'markers_349_1_cnt',
 'markers_323_1_cnt',
 'markers_476_1_cnt',
 'payments_details_23_3d6_avg',
 'markers_40_1_cnt',
 'markers_310_1_cnt',
 'markers_60_1_cnt',
 'markers_330_1_cnt',
 'markers_333_1_cnt',
 'payments_details_33_1_sum',
 'markers_334_1_cnt',
 'markers_772_1_cnt',
 'markers_59_1_cnt',
 'markers_242_1_cnt',
 'markers_387_1_cnt',
 'tariff_plans_5_1_num']
feature_list = ['channel_name',
 'basic_info_0_0_avg',
 'materials_details_16_1_ctg',
 'communication_availability_30_1_flg',
 'tariff_plans_21_1_max',
 'payments_details_49_6_avg',
 'user_active_24_0_dt',
 'info_house_5_0_num',
 'user_devices_30_1_cnt',
 'tariff_plans_19_src_id',
 'campaigns_281_1_part',
 'user_lifetime_3_0_dt',
 'markers_912_1_cnt',
 'markers_905_1_cnt',
 'payments_details_45_1_avg',
 'payments_details_46_1_sum',
 'type_av_100_0_1_ctg',
 'tariff_plans_20_1_ctg',
 'traffic_details_34_1d6_avg',
 'traffic_details_60_1_avg',
 'campaigns_357_1_sum',
 'traffic_details_59_6_sum',
 'info_house_6_0_num',
 'plan_costs_0_1_sum',
 'markers_904_1_cnt',
 'traffic_details_50_6_sum',
 'exist_tariff_0_1_flg',
 'communication_availability_17_1_flg',
 'cities_2_0_ctg',
 'campaigns_403_3d6_part',
 'traffic_details_35_1d6_std',
 'markers_933_1_cnt',
 'traffic_details_62_1_sum',
 'traffic_details_9_3d6_part',
 'traffic_details_33_1d3_std',
 'communication_availability_40_1_ctg',
 'scheme_types_2_1_flg',
 'tariff_plans_22_1_min',
 'user_active_3_1_flg',
 'spas_symptoms_agr_127_6_sum',
 'traffic_details_49_6_std',
 'payments_details_48_3_sum',
 'spas_symptoms_agr_106_12_sum',
 'plan_costs_5_6_avg',
 'user_active_23_0_dt',
 'payments_details_47_3_avg',
 'traffic_details_47_3_sum',
 'spas_symptoms_agr_115_6_sum',
 'payments_details_50_6_sum',
 'traffic_details_40_6_avg',
 'vas_details_50_6_cnt',
 'traffic_details_29_6_sum',
 'spas_symptoms_agr_105_12_std',
 'communication_availability_44_1_flg',
 'spas_symptoms_agr_104_12_avg',
 'plan_costs_3_1_sum',
 'traffic_details_25_3d6_std',
 'spas_symptoms_int_45_1_cnt',
 'campaigns_400_1d6_part',
 'traffic_details_38_3d6_avg',
 'communication_availability_33_1_flg',
 'traffic_details_43_1_std',
 'campaigns_390_1d3_part',
 'traffic_details_23_3_sum',
 'traffic_details_39_3d6_std',
 'spas_symptoms_agr_163_6_sum',
 'spas_symptoms_agr_146_3_avg',
 'user_devices_24_1_cnt',
 'spas_symptoms_int_85_1_cnt',
 'spas_symptoms_agr_155_1_avg',
 'cities_1_0_ctg',
 'social_dem_4_0_flg',
 'traffic_details_21_3_avg',
 'user_active_10_1_flg',
 'materials_details_19_1_dt',
 'spas_symptoms_agr_120_1_std',
 'spas_symptoms_agr_159_3_std',
 'traffic_details_61_1_std',
 'plan_costs_1_3_avg',
 'spas_symptoms_agr_156_1_std',
 'spas_symptoms_agr_158_3_avg',
 'traffic_details_24_3d6_avg',
 'traffic_details_16_1d3_std',
 'spas_symptoms_agr_113_6_avg',
 'charges_details_32_6_avg',
 'communication_availability_34_1_flg',
 'vas_details_4_3_sum',
 'spas_symptoms_int_130_1_cnt',
 'scheme_types_0_1_flg',
 'traffic_details_14_1_sum',
 'spas_symptoms_agr_93_12_std',
 'traffic_details_64_3_std',
 'spas_symptoms_int_91_1_cnt',
 'spas_symptoms_agr_162_6_std',
 'area_0_0_num',
 'user_lifetime_2_1_num',
 'traffic_details_44_1_sum',
 'communication_availability_69_1_flg',
 'spas_symptoms_agr_125_6_avg',
 'traffic_details_41_6_std']
с = ['target','channel_name',
 'basic_info_2_0_min',
  'markers_706_1_cnt',
 'tariff_plans_22_1_min',
 'spas_symptoms_agr_105_12_std',
 'arpu_2_6_avg',
 'user_devices_30_1_cnt',
 'materials_details_15_1_ctg',
 'spas_symptoms_agr_114_6_std',
 'info_house_10_0_ctg',
 'user_active_24_0_dt',
 'user_lifetime_3_0_dt',
 'markers_772_1_cnt',
 'type_av_100_0_1_ctg',
 'traffic_details_43_1_std',
 'markers_476_1_cnt']

 features_all  = feature_list + ['channel_name','target'] + nick + с
 features_all = dubl_list(features_all)
